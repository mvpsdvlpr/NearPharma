name: Deploy backend to Vercel

on:
  push:
    # Keep deploying from main, and also run on feature branch pushes so preview
    # deploys can be created without merging to main.
    branches: [ main, 'feature/**' ]
    paths:
      - 'backend/**'
  pull_request:
    # Run for PRs targeting main so the deploy job can validate the backend changes
    # during review (matches Flutter tests behavior).
    branches: [ main ]
    paths:
      - 'backend/**'

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v6
        with:
          node-version: '22'

      - name: Install dependencies
        working-directory: backend
        run: npm ci

      - name: Build backend
        working-directory: backend
        run: npm run vercel-build

      - name: Install Vercel CLI
        run: npm install -g vercel@28

      - name: Deploy to Vercel
        env:
          VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
          VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
        run: |
          # If required secrets are not set, skip deploy (useful for PRs/feature branches)
          if [ -z "$VERCEL_TOKEN" ] || [ -z "$VERCEL_ORG_ID" ] || [ -z "$VERCEL_PROJECT_ID" ]; then
            echo "Vercel secrets not set (VERCEL_TOKEN / VERCEL_ORG_ID / VERCEL_PROJECT_ID). Skipping deploy.";
            exit 0;
          fi
          cd backend
          # Use the Vercel CLI to deploy the current backend directory
          vercel --cwd . --confirm --token $VERCEL_TOKEN --prod --yes
